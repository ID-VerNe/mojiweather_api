# pyproject.toml

[build-system]
# This specifies the build backend tool requirement.
# setuptools and wheel are commonly used.
requires = ["setuptools>=61.0"] # Require setuptools version 61.0 or higher
build-backend = "setuptools.build_meta"

[project]
# Project metadata
name = "mojiweather-api" # The name of your package. Use hyphens instead of underscores for PyPI.
version = "0.1.0"        # The starting version of your package.
description = "A Python package to access weather data from Moji Weather (unofficial scraping)." # A short description.
readme = "README.md"     # Path to your README file.
requires-python = ">=3.7" # Minimum Python version required. Dataclasses and async features suggest 3.7+.
# List of dependencies required by your package at runtime.
dependencies = [
    "httpx>=0.20.0",     # For asynchronous HTTP requests.
    "beautifulsoup4>=4.10.0", # For parsing HTML content.
    # We don't list standard library modules here (like logging, configparser, os).
    # If you added other external libraries later, list them here.
]

# Project URLs (optional)
[project.urls]
Homepage = "https://github.com/ID-VerNe/mojiweather_api" # Replace with your repo URL if open source
# Documentation = "https://yourpackage.readthedocs.io/" # If you have documentation

# Project authors (replace with your information)
[project.authors]
# You can list multiple authors/maintainers
name = "VerNe"
email = "yuu_seeing@foxmail.com"

# Project license (replace with your chosen license)
license = { file = "LICENSE" } # Or { file = "LICENSE" } if you have a separate LICENSE file
# Also specify the license classifier for PyPI (optional but recommended)
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License", # Replace with your actual license classifier
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Atmospheric Science", # Relevant topic
    "License :: OSI Approved :: MIT License",
]

# Keywords (optional)
keywords = ["mojiweather", "weather", "api", "scraping", "asynchronous"]

# Package data (optional, if you need to include non-code files inside the package)
# For this package, it seems unlikely you need to include extra data files in the package itself,
# as the config file is external.

# [tool.setuptools.package-data]
# "mojiweather_api" = ["data/*.txt"]

# Entry points (optional, if you want to create command-line scripts)
# [project.scripts]
# mojiweather = "mojiweather_api.cli:main" # Example entry point if you add a CLI module

# Tool-specific configurations (e.g., setuptools settings)
# None are strictly necessary for this basic package structure with setuptools.
# If you needed to customize package finding or data_files, you would add them here.

# Example: tell setuptools to find packages automatically
[tool.setuptools.packages.find]
where = ["."]  # Search for packages in the current directory (where pyproject.toml is)
# include = ["mojiweather_api*"] # Include packages matching this pattern
# exclude = ["tests*"] # Exclude packages matching this pattern (like test directory)